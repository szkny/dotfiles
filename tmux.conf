# prefixキーをC-aに変更する
set -g prefix C-a

# C-bのキーバインドを解除する
unbind C-b

# キーストロークのディレイを減らす
set -sg escape-time 1

# ウィンドウのインデックスを1から始める
set -g base-index 1

# ペインのインデックスを1から始める
setw -g pane-base-index 1

# ウィンドウを閉じた際にインデックスを振り直す
set-option -g renumber-windows on

# 設定ファイルをリロードする
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# C-a*2でtmux内のプログラムにC-aを送る
bind C-a send-prefix

# 新規ウィンドウを作成する
bind n new-window

# v でペインを縦に分割する
bind v split-window -h -c "#{pane_current_path}"

# s でペインを横に分割する
bind s split-window -v -c "#{pane_current_path}"

# Vimのキーバインドでペインを移動する
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# Vimのキーバインドでペインをリサイズする
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# マウス操作を有効にする
setw -g mouse on

# ターミナルカラー
# set -g default-terminal "screen-256color"
set -g default-terminal "xterm-256color"
set -ag terminal-overrides ",xterm-256color:Tc"
# set -g default-terminal "tmux-256color"

# # ウィンドウリストの色を設定する
# setw -g window-status-fg cyan
# setw -g window-status-bg default
# setw -g window-status-attr dim
# # アクティブなウィンドウを目立たせる
# setw -g window-status-current-fg black
# setw -g window-status-current-bg "colour255"
# setw -g window-status-current-attr bright
#
# # ペインボーダーの色を設定する
# set -g pane-border-fg green
# # set -g pane-border-bg black
# # アクティブなペインを目立たせる
# # set -g pane-active-border-fg white
# # set -g pane-active-border-bg yellow
#
# # コマンドラインの色を設定する
# set -g message-fg white
# set -g message-bg black
# set -g message-attr bright

# ステータスバーを設定する
set -g status-position top
set -g status-justify centre
set -g status-bg "#2e2e2e"
set -g status-interval 1
set -g visual-activity off
setw -g monitor-activity on
## 左側の設定
set-option -g status-left "\
#[fg=#394250]#[bg=#2e2e2e]\
#[bg=#394250]#[fg=#ddddee]  #I-#P \
#[fg=#394250]#[bg=#2e2e2e]"
## 右側の設定
set-option -g status-right "\
#[fg=#a0a9cb]  \
#[fg=#a0a9cb]%Y-%m-%d(%a) \
#[fg=#a0a9cb]  \
#[fg=#a0a9cb]%H:%M "
## アクティブウィンドウの設定
setw -g window-status-current-format '\
#[fg=#394250]#[bg=#2e2e2e]#[bg=#394250]#[fg=#aaee66]\
#I#[fg=#aaaa99]:#[fg=#ddddee]#[bold]#W#[none]#[fg=#aaaa99]\
#F#[fg=#394250]#[bg=#2e2e2e]'
## 非アクティブウィンドウの設定
setw -g window-status-format '\
#[bg=#2e2e2e]#[fg=#bbbbcc] #I:#W#F '
setw -g window-status-bell-style "bg=#aaaa99"

# ペインボーダーの設定
set -g pane-border-style "fg=#2e2e2e"
set -g pane-active-border-style "fg=#5588dd"
# set-option -g pane-border-status bottom
# # set-option -g pane-border-format "#[fg=black,bg=blue] #P #(tmux-pane-border '#{pane_current_path}')"

## カレントディレクトリにウインドウ名を修正
set-option -g automatic-rename on
set-option -g automatic-rename-format '#{b:pane_current_path}'

# コピーモードを設定する
## viのキーバインドを使用する
setw -g mode-keys vi
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
## コピーモードの操作をvi風に設定する
### xselが必要
# bind-key -T copy-mode-vi v send-keys -X begin-selection
# bind-key -T copy-mode-vi y send-keys copy-pipe-and-cancel "xsel -ip && xsel -op | xsel -ib"
# ## デフォルトのEnterでもコピーできるようにキーバインドを変更
# unbind -T copy-mode-vi Enter
# bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xsel -ip && xsel -op | xsel -ib"
# # クリップボード共有を有効にする
# set-option -g default-command "reattach-to-user-namespace -l bash"
# ## コピーモードの操作をvi風に設定する
# bind-key -T copy-mode-vi v send-keys -X begin-selection
# bind-key -T copy-mode-vi y send-keys copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
# unbind -T copy-mode-vi Enter
# bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# Vim/Neovimにカーソルフォーカス情報を渡す
set-option -g focus-events on

